{"question_id": 95, "choices": [{"index": 0, "turns": ["Ini artinya \"Pakaianku semakin longgar namun aku tidak menyesal. Saya dengan sukarela menderita dan merana karena dia.\"", "Itu artinya \"Saya tidak mengerti apa-apa\"."]}]}
{"question_id": 101, "choices": [{"index": 0, "turns": ["Anda berada di posisi kedua.", "Tidak pasti."]}]}
{"question_id": 102, "choices": [{"index": 0, "turns": ["Jawabannya adalah \"Washington, DC\".", "Tidak."]}]}
{"question_id": 103, "choices": [{"index": 0, "turns": ["Mungkin Thomas bekerja di rumah sakit.", "Pertanyaan mengenai Thomas yang mengunjungi rumah sakit setiap hari meskipun dirinya tergolong sehat, menjadi menarik karena beberapa alasan:\n\n1. Sifat yang kontradiktif: Pertanyaan ini menyajikan situasi yang tampak kontradiktif, karena umumnya, masyarakat mengaitkan kunjungan ke rumah sakit dengan penyakit atau cedera. Hal ini memicu rasa ingin tahu dan mendorong pemikiran lebih dalam untuk memahami alasan di balik skenario tersebut.\n\n2. Kemungkinan yang beragam: Pertanyaan ini membuka kesempatan terhadap berbagai kemungkinan penjelasan, yang dapat mengarah pada diskusi menarik serta wawasan terkait berbagai aspek kesehatan, pekerjaan, dan kehidupan pribadi.\n\n3. Relevansi kehidupan nyata: Pertanyaan ini berkaitan dan relevan dengan situasi kehidupan nyata, karena ada banyak orang yang mungkin mengenal seseorang yang sering mengunjungi rumah sakit dengan berbagai alasan. Hal ini membuat pertanyaan menjadi menarik dan menggugah pikiran.\n\n4. Mendorong rasa empati: Dengan mencari tahu alasan di balik kunjungan harian Thomas ke rumah sakit, pertanyaan ini mendorong rasa empati dan pemahaman terhadap tantangan dan tanggung jawab yang mungkin dihadapi seseorang dalam kehidupan pribadinya.\n\n5. Menyoroti peran yang berbeda: Pertanyaan ini menarik perhatian orang-orang yang berada di lingkungan rumah sakit, seperti tenaga kesehatan, pengasuh, relawan, dan pasien. Hal ini dapat mendorong apresiasi yang lebih besar terhadap beragam kontribusi yang diberikan oleh para individu dalam sistem layanan kesehatan.\n\nSecara keseluruhan, pertanyaan ini menarik karena membangkitkan beberapa asumsi, mendorong pemikiran kritis, dan meningkatkan rasa empati serta pemahaman terhadap perspektif yang berbeda."]}]}
{"question_id": 104, "choices": [{"index": 0, "turns": ["David tidak memiliki saudara laki-laki. Dia adalah satu-satunya saudara laki-laki dari tiga saudara perempuannya.", "David punya satu saudara laki-laki."]}]}
{"question_id": 105, "choices": [{"index": 0, "turns": ["Sekretarisnya adalah Alice.", "Warna mobil dari yang terakhir ke yang pertama adalah: ungu, kuning, hijau, biru, merah."]}]}
{"question_id": 106, "choices": [{"index": 0, "turns": ["Benar.", "Tidak pasti."]}]}
{"question_id": 107, "choices": [{"index": 0, "turns": ["A adalah kakek dari C.", "A adalah tiga generasi di atas Z."]}]}
{"question_id": 108, "choices": [{"index": 0, "turns": ["Mobil tidak sepadan karena semua yang lainnya adalah komponen-komponen dari mobil.", "Tentu, saya dapat mengganti \"mobil\" dengan \"pedal rem.\" Sekarang, daftar tersebut mencakup ban, setir, mesin, dan pedal rem, yang seluruhnya merupakan bagian dari mobil."]}]}
{"question_id": 109, "choices": [{"index": 0, "turns": ["Barat.", "Selatan."]}]}
{"question_id": 110, "choices": [{"index": 0, "turns": ["Para pengawas harus melaporkan situasi (c).", "Untuk menentukan apakah anak-anak perempuan tersebut mengatakan yang sebenarnya atau menutupi perundungan, para pengawas harus mencari bukti sebagai berikut:\n\n1. Bahasa tubuh dan ekspresi wajah korban: Jika anak perempuan tersebut tampak sedih, takut, atau tidak nyaman, hal ini mungkin mengindikasikan bahwa dia sedang mengalami perundungan.\n\n2. Nada percakapan: Jika anak-anak perempuan tersebut berbicara dengan nada mengejek, sarkastik, atau agresif, hal tersebut menjadi tanda perundungan.\n\n3. Riwayat orang yang terlibat: Jika di antara anak-anak perempuan tersebut ada yang memiliki riwayat perundungan atau jika korban pernah menjadi target sebelumnya, maka kemungkinan besar perudungan sedang terjadi.\n\n4. Reaksi siswa-siswa lain di sekitar: Jika siswa lain tampak tidak nyaman atau mencoba menghindari situasi tersebut, itu dapat menjadi indikasi bahwa ada sesuatu yang salah.\n\n5. Sifat dari \"permainan\": Jika permainan tersebut melibatkan ejekan, penghinaan, atau pengecualian, hal tersebut mungkin merupakan bentuk penyamaran dari perundungan.\n\n6. Kesediaan anak-anak perempuan untuk mengembalikan ransel: Jika mereka enggan mengembalikan ransel atau terus mengejek korban, itu dapat menjadi tanda perundungan.\n\n7. Respon grup saat dikonfrontasi: Jika anak-anak perempuan tersebut menjadi defensif, meremehkan, atau agresif ketika dipertanyakan, hal ini mungkin mengindikasikan bahwa mereka mencoba menyembunyikan tindakan mereka."]}]}
{"question_id": 111, "choices": [{"index": 0, "turns": ["Luasnya adalah 3.", "5pi"]}]}
{"question_id": 112, "choices": [{"index": 0, "turns": ["12000", "2000"]}]}
{"question_id": 113, "choices": [{"index": 0, "turns": ["19%", "0%"]}]}
{"question_id": 114, "choices": [{"index": 0, "turns": ["36 (semua kasus) - 0 (jumlah sama dengan 1) - 1 (jumlah sama dengan 2) = 35, jadi peluangnya adalah 35/36", "100%"]}]}
{"question_id": 115, "choices": [{"index": 0, "turns": ["38 orang", "Total jumlah penumpang adalah 50 * 2 = $100."]}]}
{"question_id": 116, "choices": [{"index": 0, "turns": ["0\n\nSangat sederhana. hanya (x+y)^2 - 4xy = (4z)^2 - 4*4z^2 = 0 = (x-y)^2\njadi x-y = 0", "(-1/2)y\n\nz-x = z - 2z = -z = (-1/2)y"]}]}
{"question_id": 117, "choices": [{"index": 0, "turns": ["19 bilangan bulat (-14, ..., 4)", "9 bilangan bulat (-14, ..., -6)"]}]}
{"question_id": 118, "choices": [{"index": 0, "turns": ["0\n\n2 * (10x+4) = 20x + 8 = 4 * (5x+2) + 0", "3\n\n20x + 8 = 5 * (4x + 1) + 3"]}]}
{"question_id": 119, "choices": [{"index": 0, "turns": ["280", "350"]}]}
{"question_id": 120, "choices": [{"index": 0, "turns": ["f(2) = 0", "x = 2"]}]}
{"question_id": 121, "choices": [{"index": 0, "turns": ["Bisa menggunakan solusi sederhana seperti menggunakan Counter.\n\nContoh jawaban:\n```\nimport os\nimport re\nfrom collections import Counter\ndef get_files_in_directory(directory):\n return [os.path.join(directory, f) for f in os.listdir(directory) if os.path.isfile(os.path.join(directory, f)) and f.endswith('.txt')]\ndef read_file(file_path):\n with open(file_path, 'r', encoding='utf-8') as file:\n return file.read()\ndef count_words(text):\n words = re.findall(r'\\w+', text.lower())\n return Counter(words)\ndef main():\n directory = input(\"Enter the directory path: \")\n files = get_files_in_directory(directory)\n word_counts = Counter()\n for file in files:\n text = read_file(file)\n word_counts += count_words(text)\n top_5_words = word_counts.most_common(5)\n print(\"Top 5 words with the most number of occurrences:\")\n for word, count in top_5_words:\n print(f\"{word}: {count}\")\nif __name__ == \"__main__\":\n main()\n```", "Anda harus memeriksa dengan teliti apakah logika paralelisasi tersebut benar dan pilih implementasi yang lebih cepat.\n\nContoh jawaban:\n```\nimport os\nimport re\nfrom collections import Counter\nimport concurrent.futures\ndef get_files_in_directory(directory):\n return [os.path.join(directory, f) for f in os.listdir(directory) if os.path.isfile(os.path.join(directory, f)) and f.endswith('.txt')]\ndef read_file(file_path):\n with open(file_path, 'r', encoding='utf-8') as file:\n return file.read()\ndef count_words(text):\n words = re.findall(r'\\w+', text.lower())\n return Counter(words)\ndef process_file(file):\n text = read_file(file)\n return count_words(text)\ndef main():\n directory = input(\"Enter the directory path: \")\n files = get_files_in_directory(directory)\n word_counts = Counter()\n with concurrent.futures.ThreadPoolExecutor() as executor:\n future_word_counts = {executor.submit(process_file, file): file for file in files}\n for future in concurrent.futures.as_completed(future_word_counts):\n word_counts += future.result()\n top_5_words = word_counts.most_common(5)\n print(\"Top 5 words with the most number of occurrences:\")\n for word, count in top_5_words:\n print(f\"{word}: {count}\")\nif __name__ == \"__main__\":\n main()\n```"]}]}
{"question_id": 122, "choices": [{"index": 0, "turns": ["Mudah\n\n```\nint fibonacci(int n) {\n if (n <= 1) {\n return n;\n } else {\n return fibonacci(n - 1) + fibonacci(n - 2);\n }\n}\n```", "Anda harus memeriksa dengan teliti kasus-kasus awal untuk n < 3.\n\n```\nint find_nth_number(int n) {\n std::vector<int> sequence = {0, -1, -1};\n for (int i = 3; i <= n; ++i) {\n int next_number = sequence[i - 1] + sequence[i - 2] + sequence[i - 3];\n sequence.push_back(next_number);\n }\n return sequence[n];\n}\n```"]}]}
{"question_id": 123, "choices": [{"index": 0, "turns": ["<!DOCTYPE html>\n<html lang=\"id\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Pembuat Lelucon Acak</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            background-color: #f0f0f0;\n        }\n        button {\n            font-size: 20px;\n            padding: 10px 20px;\n            cursor: pointer;\n        }\n    </style>\n    <script>\n        function tampilkanLeluconAcak() {\n            const lelucon = [\n                \"Mengapa ilmuwan tidak percaya pada atom? Karena mereka berbohong atas segalanya!\",\n                \"Mengapa ayam pergi ke tempat rapat? Untuk sampai ke alam lain.\",\n                \"Mengapa beberapa pasangan tidak pergi ke ruang olahraga? Karena beberapa hubungan tidak berhasil.\",\n                \"Apakah kamu mendengar tentang ahli matematika yang takut dengan angka negatif? Dia tidak akan berhenti untuk menghindarinya!\"\n            ];\n\n            const indeksAcak = Math.floor(Math.random() * lelucon.length);\n            const leluconAcak = lelucon[indeksAcak];\n            document.getElementById(\"jokeDisplay\").innerHTML = leluconAcak;\n        }\n    </script>\n</head>\n<body>\n    <h1>Pembuat Lelucon Acak</h1>\n    <button onclick=\"tampilkanLeluconAcak()\">Tunjukkan saya sebuah lelucon!</button>\n    <p id=\"jokeDisplay\"></p>\n</body>\n</html>", "Anda bisa menggunakan CSS untuk mengubah warna lelucon menjadi merah dengan menambahkan aturan untuk gaya pada elemen paragraf di mana lelucon ditampilkan. Dalam bagian `<style>` dari kode HTML, tambahkan aturan untuk elemen `#jokeDisplay` untuk mengatur properti `color` menjadi merah:\n\n```html\n<!DOCTYPE html>\n<html lang=\"id\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Generator Lelucon Acak</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            background-color: #f0f0f0;\n        }\n        button {\n            font-size: 20px;\n            padding: 10px 20px;\n            cursor: pointer;\n        }\n        /* Tambahkan aturan ini untuk mengubah warna lelucon menjadi merah */\n        #jokeDisplay {\n            color: red;\n        }\n    </style>\n    <script>\n        function showRandomJoke() {\n            const jokes = [\n                \"Mengapa ilmuwan tidak percaya pada atom? Karena mereka berbohong atas segalanya!\",\n                \"Mengapa ayam pergi ke tempat rapat? Untuk sampai ke alam lain.\",\n                \"Mengapa beberapa pasangan tidak pergi ke ruang olahraga? Karena beberapa hubungan tidak berhasil.\",\n                \"Apakah kamu mendengar tentang ahli matematika yang takut dengan angka negatif? Dia tidak akan berhenti untuk menghindarinya!\"\n            ];\n\n            const randomIndex = Math.floor(Math.random() * jokes.length);\n            const randomJoke = jokes[randomIndex];\n            document.getElementById(\"jokeDisplay\").innerHTML = randomJoke;\n        }\n    </script>\n</head>\n<body>\n    <h1>Generator Lelucon Acak</h1>\n    <button onclick=\"showRandomJoke()\">Tampilkan saya sebuah lelucon!</button>\n    <p id=\"jokeDisplay\"></p>\n</body>\n</html>\n```\n\nSekarang, ketika lelucon ditampilkan, warna teksnya akan menjadi merah."]}]}
{"question_id": 124, "choices": [{"index": 0, "turns": ["Tidak ada bug dalam implementasi ini.", "Ada bug pada inisialisasi larik dp. Seharusnya menggunakan 0 daripada None."]}]}
{"question_id": 125, "choices": [{"index": 0, "turns": ["Sangat sederhana. Fungsi tersebut hanya perlu mengembalikan akar dari pohon.", "Jawabannya sama. Masih merupakan akar dari pohon tersebut."]}]}
{"question_id": 126, "choices": [{"index": 0, "turns": ["Periksalah dengan teliti apakah solusi yang diberikan memiliki kompleksitas linear.\n\n```\ndef find_median(arr1, arr2):\n n1 = len(arr1)\n n2 = len(arr2)\n if (n1 + n2) == 0:\n return None\n\n i, j = 0, 0\n last_1, last_2 = None, None\n\n for k in range(1, (n1 + n2) // 2 + 2):\n last_2 = last_1\n if j == n2:\n last_1 = arr1[i]\n i += 1\n elif i == n1:\n last_1 = arr2[j]\n j += 1\n elif arr1[i] < arr2[j]:\n last_1 = arr1[i]\n i += 1\n else:\n last_1 = arr2[j]\n j += 1\n \n if (n1 + n2) % 2 == 1:\n return last_1\n else:\n return (last_1 + last_2) / 2\n```", "Terdapat solusi pencarian biner dengan kompleksitas waktu O(log n).\n\nContoh jawaban:\n```\ndef findMedian(nums1, nums2):\n total = len(nums1) + len(nums2)\n if total % 2 == 1:\n return findKth(nums1, nums2, total // 2 + 1)\n else:\n return (findKth(nums1, nums2, total // 2) + findKth(nums1, nums2, total // 2 + 1)) / 2.0\ndef findKth(nums1, nums2, k):\n if len(nums1) > len(nums2):\n nums1, nums2 = nums2, nums1\n if not nums1:\n return nums2[k-1]\n if k == 1:\n return min(nums1[0], nums2[0])\n i = min(k // 2, len(nums1))\n j = k - i\n if nums1[i-1] <= nums2[j-1]:\n return findKth(nums1[i:], nums2, j) \n else:\n return findKth(nums1, nums2[j:], i)\n```"]}]}
{"question_id": 127, "choices": [{"index": 0, "turns": ["Pastikan apakah mereka mengimplementasikan algoritma klasik tersebut dengan benar.\n\nContoh jawaban:\n```\ndef majority_element(arr):\n count = 0\n candidate = None\n # Boyer-Moore Voting Algorithm\n for num in arr:\n if count == 0:\n candidate = num\n count += (1 if num == candidate else -1)\n # Verify if the candidate is indeed the majority element\n if arr.count(candidate) > len(arr) // 2:\n return candidate\n else:\n return None\n```", "Tidak ada modifikasi sederhana berdasarkan Algoritma Voting Boyer-Moore. Jawaban yang diharapkan adalah menggunakan tabel hash.\n\n```\ndef topTwo(nums):\n # Build a frequency map\n frequency_map = {}\n for num in nums:\n if num in frequency_map:\n frequency_map[num] += 1\n else:\n frequency_map[num] = 1\n\n # Find the top two most occurring elements\n most_frequent = sorted(frequency_map.items(), key=lambda x: x[1], reverse=True)[:2]\n\n return [num for num, _ in most_frequent]\n```"]}]}
{"question_id": 128, "choices": [{"index": 0, "turns": ["Jawaban yang diharapkan adalah dengan menggunakan pemrograman dinamis seperti yang ditunjukkan di bawah ini. Beberapa chatbot mungkin akan menjawab dengan menggunakan bilangan Catalan. Periksa kasus khusus seperti ketika n adalah genap -> kembalikan 0.\n\n```python\ndef full_binary_trees(n):\n if n % 2 == 0:\n return 0\n if n == 1:\n return 1\n\n dp = [0] * (n + 1)\n dp[1] = 1\n\n for i in range(3, n + 1, 2):\n for j in range(1, i - 1, 2):\n dp[i] += dp[j] * dp[i - j - 1]\n\n return dp[n]\n```", "Jawaban yang diharapkan masih menggunakan pemrograman dinamis (DP). Penggunaan bilangan Catalan tidak tepat. Pastikan untuk memeriksa persamaan transisi dengan teliti.\n\n```python\ndef full_ternary_trees(n):\n if n % 3 != 1:\n return 0\n if n == 1:\n return 1\n\n dp = [0] * (n + 1)\n dp[1] = 1\n\n for i in range(4, n + 1, 3):\n for j in range(1, i - 1, 3):\n for k in range(1, i - j - 1, 3):\n dp[i] += dp[j] * dp[k] * dp[i - j - k - 1]\n\n return dp[n]\n```"]}]}
{"question_id": 129, "choices": [{"index": 0, "turns": ["Mudah tapi berhati-hatilah dengan kasus-kasus khusus.\n\nContoh jawaban:\n```\ndef kth_smallest_element(list1, list2, k):\n m, n = len(list1), len(list2)\n i, j = 0, 0\n while i < m and j < n:\n if list1[i] < list2[j]:\n k -= 1\n if k == 0:\n return list1[i]\n i += 1\n else:\n k -= 1\n if k == 0:\n return list2[j]\n j += 1\n while i < m:\n k -= 1\n if k == 0:\n return list1[i]\n i += 1\n while j < n:\n k -= 1\n if k == 0:\n return list2[j]\n j += 1\n return None\n```", "Ya, pencarian biner yang dimodifikasi memiliki kompleksitas waktu O(log k).\n\nContoh jawaban:\n```\ndef find_kth_element_helper(list1, list2, k):\n if len(list1) > len(list2):\n return find_kth_element_helper(list2, list1, k)\n if not list1:\n return list2[k - 1]\n if k == 1:\n return min(list1[0], list2[0])\n i = min(len(list1), k // 2)\n j = k - i\n if list1[i - 1] < list2[j - 1]:\n return find_kth_element_helper(list1[i:], list2, k - i)\n else:\n return find_kth_element_helper(list1, list2[j:], k - j)\ndef kth_smallest_element(list1, list2, k):\n return find_kth_element_helper(list1, list2, k)\n```"]}]}
{"question_id": 130, "choices": [{"index": 0, "turns": ["Diharapkan kompleksitas waktu O(n^2) atau O(n log n). Berikut adalah solusi dengan kompleksitas waktu O(n^2). Anda juga bisa mengurutkannya terlebih dahulu dan menggunakan dua penunjuk.\n\n```\ndef find_common_elements(arr1, arr2):\n common_elements = []\n for i in range(len(arr1)):\n for j in range(len(arr2)):\n if arr1[i] == arr2[j]:\n # Check if the element is already in the common_elements list\n if arr1[i] not in common_elements:\n common_elements.append(arr1[i])\n return common_elements\n```", "Gunakan tabel hash (set atau dict) untuk mencapai kompleksitas waktu O(n).\n\n```\ndef find_common_elements(arr1, arr2):\n set1 = set(arr1)\n set2 = set(arr2)\n common_elements = set1.intersection(set2)\n return list(common_elements)\n```"]}]}
{"question_id": 131, "choices": [{"index": 0, "turns": ["Jawaban untuk pertanyaan pertama seharusnya [5, 1, 3]."]}]}
{"question_id": 133, "choices": [{"index": 0, "turns": ["Jawabannya hanya boleh mencakup 'Harry Potter and the Philosopher's Stone' dan 'The Prism Galaxy Chronicles: The Awakening of the Starcaster'"]}]}
{"question_id": 134, "choices": [{"index": 0, "turns": ["Perusahaan V ($25 miliar).", "Perusahaan Z (35%)"]}]}
{"question_id": 136, "choices": [{"index": 0, "turns": ["Bali, 7; pantai, 6; Susi, 2", "nah, 17; kan, 5; gitu, 4"]}]}
{"question_id": 140, "choices": [{"index": 0, "turns": ["Bulan,Tertinggi,Terendah\n01,156.25,153.80\n02,163.90,161.80\n03,168.20,166.80", "```\n{ \"Januari\": { \"Tinggi\": 156, \"Rendah\": 154 }, \"Februari\": { \"Tinggi\": 164, \"Rendah\": 162 }, \"Maret\": { \"Tinggi\": 168, \"Rendah\": 167 } }\n```"]}]}
{"question_id": 142, "choices": [{"index": 0, "turns": ["Jari-jari orbit dan periode revolusi akan meningkat."]}]}
{"question_id": 143, "choices": [{"index": 0, "turns": ["Dua tahap utama: reaksi terang dan reaksi gelap"]}]}
{"question_id": 144, "choices": [{"index": 0, "turns": ["Informasi genetik mengalir dari DNA ke RNA ke Protein. Tiga proses: replikasi, transkripsi, dan translasi. Diperkenalkan oleh Francis Crick pada tahun 1958."]}]}
{"question_id": 145, "choices": [{"index": 0, "turns": ["CaCO\u2083 + 2 HCl \u2192 CaCl\u2082 + CO\u2082 + H\u2082O", "Tidak mudah untuk melakukan ini."]}]}
