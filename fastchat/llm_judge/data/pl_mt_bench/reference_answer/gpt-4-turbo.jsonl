{"question_id": 95, "choices": [{"index": 0, "turns": ["To oznacza: \"Lu\u017ane staj\u0105 si\u0119 moje ubrania, jednak nie \u017ca\u0142uj\u0119. Bo wi\u0119dn\u0119 i cierpi\u0119 dla niej z w\u0142asnej woli.\"", "To znaczy \u201eNic nie rozumiem\u201d."]}]}
{"question_id": 101, "choices": [{"index": 0, "turns": ["Jeste\u015b na drugim miejscu.", "Niepewne."]}]}
{"question_id": 102, "choices": [{"index": 0, "turns": ["Odpowied\u017a brzmi \"Waszyngton, DC\".", "Nie."]}]}
{"question_id": 103, "choices": [{"index": 0, "turns": ["Thomas mo\u017ce pracowa\u0107 w szpitalu.", "Pytanie o codzienne wizyty Thomasa w szpitalu, mimo \u017ce jest zdrowy, jest interesuj\u0105ce z kilku powod\u00f3w:\n\n1. Sprzeczny charakter: Pytanie przedstawia pozornie sprzeczn\u0105 sytuacj\u0119, poniewa\u017c ludzie zazwyczaj kojarz\u0105 wizyty w szpitalu z chorob\u0105 lub urazem. To wzbudza ciekawo\u015b\u0107 i zach\u0119ca do g\u0142\u0119bszych przemy\u015ble\u0144 w celu zrozumienia powod\u00f3w stoj\u0105cych za t\u0105 sytuacj\u0105.\n\n2. R\u00f3\u017cnorodne mo\u017cliwo\u015bci: Pytanie otwiera szeroki wachlarz mo\u017cliwych wyja\u015bnie\u0144, co mo\u017ce prowadzi\u0107 do interesuj\u0105cych dyskusji i wgl\u0105du w r\u00f3\u017cne aspekty opieki zdrowotnej, pracy i \u017cycia osobistego.\n\n3. Znaczenie w \u017cyciu codziennym: Pytanie mo\u017cna odnie\u015b\u0107 do rzeczywistych sytuacji, poniewa\u017c wiele os\u00f3b mo\u017ce zna\u0107 kogo\u015b, kto cz\u0119sto odwiedza szpital z r\u00f3\u017cnych powod\u00f3w. To sprawia, \u017ce pytanie jest anga\u017cuj\u0105ce i prowokuje do my\u015blenia.\n\n4. Pobudza empati\u0119: Badaj\u0105c powody codziennych wizyt Thomasa w szpitalu, pytanie zach\u0119ca do empatii i zrozumienia wyzwa\u0144 i obowi\u0105zk\u00f3w, przed kt\u00f3rymi ludzie mog\u0105 stan\u0105\u0107 w swoim \u017cyciu.\n\n5. Podkre\u015bla r\u00f3\u017cne role: Pytanie zwraca uwag\u0119 na r\u00f3\u017cnorodne role, jakie ludzie pe\u0142ni\u0105 w szpitalnym \u015brodowisku, takie jak pracownicy s\u0142u\u017cby zdrowia, opiekunowie, wolontariusze i pacjenci. To mo\u017ce prowadzi\u0107 do wi\u0119kszego docenienia r\u00f3\u017cnorodnych wk\u0142ad\u00f3w, jakie jednostki wnosz\u0105 do systemu opieki zdrowotnej.\n\nOg\u00f3lnie rzecz bior\u0105c, pytanie jest interesuj\u0105ce, poniewa\u017c kwestionuje za\u0142o\u017cenia, zach\u0119ca do krytycznego my\u015blenia oraz promuje empati\u0119 i zrozumienie r\u00f3\u017cnych perspektyw."]}]}
{"question_id": 104, "choices": [{"index": 0, "turns": ["David nie ma brata. Jest jedynym bratem swoich trzech si\u00f3str.", "David ma jednego brata."]}]}
{"question_id": 105, "choices": [{"index": 0, "turns": ["Sekretarz to Alice.", "Kolory samochod\u00f3w od ostatniego do pierwszego to: fioletowy, \u017c\u00f3\u0142ty, zielony, niebieski, czerwony"]}]}
{"question_id": 106, "choices": [{"index": 0, "turns": ["Prawda.", "Niepewne."]}]}
{"question_id": 107, "choices": [{"index": 0, "turns": ["A jest dziadkiem C.", "A jest trzy pokolenia nad Z."]}]}
{"question_id": 108, "choices": [{"index": 0, "turns": ["Samoch\u00f3d nie pasuje, poniewa\u017c wszystkie pozosta\u0142e s\u0105 elementami samochodu.", "Oczywi\u015bcie, mog\u0119 zamieni\u0107 \"samoch\u00f3d\" na \"peda\u0142 hamulca\". Teraz lista zawiera opon\u0119, kierownic\u0119, silnik i peda\u0142 hamulca, kt\u00f3re s\u0105 cz\u0119\u015bciami samochodu."]}]}
{"question_id": 109, "choices": [{"index": 0, "turns": ["Zach\u00f3d", "Po\u0142udnie."]}]}
{"question_id": 110, "choices": [{"index": 0, "turns": ["Opiekunowie powinni zg\u0142osi\u0107 c).", "Aby ustali\u0107, czy dziewczyny m\u00f3wi\u0105 prawd\u0119, czy ukrywaj\u0105 prze\u015bladowanie, asystenci powinni szuka\u0107 nast\u0119puj\u0105cych dowod\u00f3w:\n\n1. Mowa cia\u0142a i wyraz twarzy ofiary: Je\u015bli dziewczyna wydaje si\u0119 zdenerwowana, przestraszona lub czuje si\u0119 niekomfortowo, mo\u017ce to wskazywa\u0107, \u017ce jest zastraszana.\n\n2. Ton rozmowy: Je\u015bli dziewczynki m\u00f3wi\u0105 kpi\u0105cym, sarkastycznym lub agresywnym tonem, mo\u017ce to by\u0107 oznak\u0105 zn\u0119cania si\u0119.\n\n3. Historia zaanga\u017cowanych os\u00f3b: Je\u015bli kt\u00f3rakolwiek z dziewcz\u0105t ma histori\u0119 zn\u0119cania si\u0119 lub je\u015bli ofiara by\u0142a wcze\u015bniej celem, mo\u017ce by\u0107 bardziej prawdopodobne, \u017ce dochodzi do zn\u0119cania si\u0119.\n\n4. Reakcje innych uczni\u00f3w w pobli\u017cu: Je\u015bli inni uczniowie wydaj\u0105 si\u0119 czu\u0107 niekomfortowo lub pr\u00f3buj\u0105 unikn\u0105\u0107 sytuacji, mo\u017ce to wskazywa\u0107, \u017ce co\u015b jest nie tak.\n\n5. Charakter \"zabawy\": Je\u015bli gra polega na dokuczaniu, poni\u017caniu lub wykluczaniu, mo\u017ce by\u0107 przykrywk\u0105 dla n\u0119kania.\n\n6. Gotowo\u015b\u0107 dziewcz\u0105t do oddania plecaka: Je\u015bli niech\u0119tnie oddaj\u0105 plecak lub nadal dokuczaj\u0105 ofierze, mo\u017ce to by\u0107 oznak\u0105 zn\u0119cania si\u0119.\n\n7. Reakcja grupy na konfrontacj\u0119: Je\u015bli dziewcz\u0119ta staj\u0105 si\u0119 defensywne, lekcewa\u017c\u0105ce lub agresywne, gdy s\u0105 pytane, mo\u017ce to wskazywa\u0107, \u017ce pr\u00f3buj\u0105 ukry\u0107 swoje dzia\u0142ania."]}]}
{"question_id": 111, "choices": [{"index": 0, "turns": ["Pole wynosi 3", "5pi"]}]}
{"question_id": 112, "choices": [{"index": 0, "turns": ["12000", "2000"]}]}
{"question_id": 113, "choices": [{"index": 0, "turns": ["19%", "0%"]}]}
{"question_id": 114, "choices": [{"index": 0, "turns": ["36 (wszystkie przypadki) - 0 (suma r\u00f3wna 1) - 1 (suma r\u00f3wna 2) = 35, wi\u0119c prawdopodobie\u0144stwo wynosi 35/36", "100%"]}]}
{"question_id": 115, "choices": [{"index": 0, "turns": ["38 os\u00f3b", "Ca\u0142kowita liczba pasa\u017cer\u00f3w to 50 * 2 = 100"]}]}
{"question_id": 116, "choices": [{"index": 0, "turns": ["Bardzo proste. Po prostu (x+y)^2 - 4xy = (4z)^2 - 4*4z^2 = 0 = (x-y)^2\nwi\u0119c x-y = 0.", "(-1/2)y\n\nz - x = z - 2z = -z = (-1/2)y"]}]}
{"question_id": 117, "choices": [{"index": 0, "turns": ["19 liczb ca\u0142kowitych (-14, ..., 4)", "9 liczb ca\u0142kowitych (-14, ..., -6)"]}]}
{"question_id": 118, "choices": [{"index": 0, "turns": ["0\n\n2 * (10x+4) = 20x + 8 = 4 * (5x+2) + 0", "3\n\n20x + 8 = 5 * (4x + 1) + 3"]}]}
{"question_id": 119, "choices": [{"index": 0, "turns": ["280", "350"]}]}
{"question_id": 120, "choices": [{"index": 0, "turns": ["f(2) = 0", "x = 2"]}]}
{"question_id": 121, "choices": [{"index": 0, "turns": ["Mog\u0105 to by\u0107 proste rozwi\u0105zania jak u\u017cycie Counter\n\nPrzyk\u0142adowa odpowied\u017a:\n```\nimport os\nimport re\nfrom collections import Counter\n\ndef get_files_in_directory(directory):\n    return [os.path.join(directory, f) for f in os.listdir(directory) if os.path.isfile(os.path.join(directory, f)) and f.endswith('.txt')]\n\ndef read_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return file.read()\n\ndef count_words(text):\n    words = re.findall(r'\\w+', text.lower())\n    return Counter(words)\n\ndef main():\n    directory = input(\"Wprowad\u017a \u015bcie\u017ck\u0119 do katalogu: \")\n    files = get_files_in_directory(directory)\n    word_counts = Counter()\n    for file in files:\n        text = read_file(file)\n        word_counts += count_words(text)\n    top_5_words = word_counts.most_common(5)\n    print(\"Top 5 s\u0142\u00f3w z najwi\u0119ksz\u0105 liczb\u0105 wyst\u0105pie\u0144:\")\n    for word, count in top_5_words:\n        print(f\"{word}: {count}\")\n\nif __name__ == \"__main__\":\n    main()\n```", "Powiniene\u015b dok\u0142adnie sprawdzi\u0107, czy logika r\u00f3wnoleg\u0142o\u015bci jest poprawna i wybra\u0107 szybsz\u0105 implementacj\u0119.\n\nPrzyk\u0142adowa odpowied\u017a:\n```\nimport os\nimport re\nfrom collections import Counter\nimport concurrent.futures\ndef get_files_in_directory(directory):\n    return [os.path.join(directory, f) for f in os.listdir(directory) if os.path.isfile(os.path.join(directory, f)) and f.endswith('.txt')]\ndef read_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return file.read()\ndef count_words(text):\n    words = re.findall(r'\\w+', text.lower())\n    return Counter(words)\ndef process_file(file):\n    text = read_file(file)\n    return count_words(text)\ndef main():\n    directory = input(\"Podaj \u015bcie\u017ck\u0119 do katalogu: \")\n    files = get_files_in_directory(directory)\n    word_counts = Counter()\n    with concurrent.futures.ThreadPoolExecutor() as executor:\n        future_word_counts = {executor.submit(process_file, file): file for file in files}\n        for future in concurrent.futures.as_completed(future_word_counts):\n            word_counts += future.result()\n    top_5_words = word_counts.most_common(5)\n    print(\"Top 5 s\u0142\u00f3w z najwi\u0119ksz\u0105 liczb\u0105 wyst\u0105pie\u0144:\")\n    for word, count in top_5_words:\n        print(f\"{word}: {count}\")\nif __name__ == \"__main__\":\n    main()\n```"]}]}
{"question_id": 122, "choices": [{"index": 0, "turns": ["To proste\n\n```\nint fibonacci(int n) {\n    if (n <= 1) {\n        return n;\n    } else {\n        return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n}\n```", "Powiniene\u015b dok\u0142adnie sprawdzi\u0107 pocz\u0105tkowe przypadki dla n < 3\n\n```\nint find_nth_number(int n) {\n    std::vector<int> sequence = {0, -1, -1};\n    for (int i = 3; i <= n; ++i) {\n        int next_number = sequence[i - 1] + sequence[i - 2] + sequence[i - 3];\n        sequence.push_back(next_number);\n    }\n    return sequence[n];\n}\n```"]}]}
{"question_id": 123, "choices": [{"index": 0, "turns": ["<!DOCTYPE html>\n<html lang=\"pl\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Generator Losowych Dowcip\u00f3w</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            background-color: #f0f0f0;\n        }\n        button {\n            font-size: 20px;\n            padding: 10px 20px;\n            cursor: pointer;\n        }\n    </style>\n    <script>\n        function showRandomJoke() {\n            const jokes = [\n                \"Dlaczego blondynka wk\u0142ada do lod\u00f3wki ksi\u0105\u017ck\u0119 telefoniczn\u0105? \u017beby mie\u0107 \u015bwie\u017ce kontakty.\",\n                \"Dlaczego liczby nie mog\u0105 si\u0119 dogada\u0107? Bo maj\u0105 zbyt wiele problem\u00f3w do rozwi\u0105zania.\",\n                \"Dlaczego \u0142\u0105ka jest mokra? Bo polana.\",\n                \"Jak nazywa si\u0119 kot, kt\u00f3ry leci? Kotlecik.\"\n            ];\n\n            const randomIndex = Math.floor(Math.random() * jokes.length);\n            const randomJoke = jokes[randomIndex];\n            document.getElementById(\"jokeDisplay\").innerHTML = randomJoke;\n        }\n    </script>\n</head>\n<body>\n    <h1>Generator Losowych Dowcip\u00f3w</h1>\n    <button onclick=\"showRandomJoke()\">Powiedz mi dowcip!</button>\n    <p id=\"jokeDisplay\"></p>\n</body>\n</html>", "Mo\u017cesz u\u017cy\u0107 CSS, aby zmieni\u0107 kolor \u017cart\u00f3w na czerwony, dodaj\u0105c regu\u0142\u0119 stylu dla elementu akapitu, w kt\u00f3rym wy\u015bwietlany jest \u017cart. W sekcji `<style>` kodu HTML dodaj regu\u0142\u0119 dla elementu `#jokeDisplay`, aby ustawi\u0107 w\u0142asno\u015b\u0107 `color` na czerwony:\n\n```html\n<!DOCTYPE html>\n<html lang=\"pl\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Generator Losowych Dowcip\u00f3w</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            background-color: #f0f0f0;\n        }\n        button {\n            font-size: 20px;\n            padding: 10px 20px;\n            cursor: pointer;\n        }\n        /* Dodaj t\u0119 regu\u0142\u0119, aby zmieni\u0107 kolor \u017cartu na czerwony */\n        #jokeDisplay {\n            color: red;\n        }\n    </style>\n    <script>\n        function showRandomJoke() {\n            const jokes = [\n            \"Dlaczego blondynka wk\u0142ada do lod\u00f3wki ksi\u0105\u017ck\u0119 telefoniczn\u0105? \u017beby mie\u0107 \u015bwie\u017ce kontakty.\",\n                \"Dlaczego liczby nie mog\u0105 si\u0119 dogada\u0107? Bo maj\u0105 zbyt wiele problem\u00f3w do rozwi\u0105zania.\",\n                \"Dlaczego \u0142\u0105ka jest mokra? Bo polana.\",\n                \"Jak nazywa si\u0119 kot, kt\u00f3ry leci? Kotlecik.\"\n            ];\n\n            const randomIndex = Math.floor(Math.random() * jokes.length);\n            const randomJoke = jokes[randomIndex];\n            document.getElementById(\"jokeDisplay\").innerHTML = randomJoke;\n        }\n    </script>\n</head>\n<body>\n    <h1>Generator Losowych Dowcip\u00f3w</h1>\n    <button onclick=\"showRandomJoke()\">Powiedz mi dowcip!</button>\n    <p id=\"jokeDisplay\"></p>\n</body>\n</html>\n```\n\nTeraz, gdy dowcip jest wy\u015bwietlany, kolor jego tekstu b\u0119dzie czerwony."]}]}
{"question_id": 124, "choices": [{"index": 0, "turns": ["W tej implementacji nie ma b\u0142\u0119du.", "Istnieje b\u0142\u0105d w inicjalizacji tablicy dp. Nale\u017cy u\u017cy\u0107 0 zamiast None."]}]}
{"question_id": 125, "choices": [{"index": 0, "turns": ["Bardzo proste. Funkcja powinna po prostu zwr\u00f3ci\u0107 korze\u0144 drzewa.", "Taka sama odpowied\u017a. Nadal jest to korze\u0144 drzewa."]}]}
{"question_id": 126, "choices": [{"index": 0, "turns": ["Starannie sprawd\u017a, czy podane rozwi\u0105zanie ma z\u0142o\u017cono\u015b\u0107 liniow\u0105.\n\n\n```\ndef find_median(arr1, arr2):\n    n1 = len(arr1)\n    n2 = len(arr2)\n    if (n1 + n2) == 0:\n        return None\n\n    i, j = 0, 0\n    last_1, last_2 = None, None\n\n    for k in range(1, (n1 + n2) // 2 + 2):\n        last_2 = last_1\n        if j == n2:\n            last_1 = arr1[i]\n            i += 1\n        elif i == n1:\n            last_1 = arr2[j]\n            j += 1\n        elif arr1[i] < arr2[j]:\n            last_1 = arr1[i]\n            i += 1\n        else:\n            last_1 = arr2[j]\n            j += 1\n        \n    if (n1 + n2) % 2 == 1:\n        return last_1\n    else:\n        return (last_1 + last_2) / 2\n```", "Istnieje rozwi\u0105zanie z u\u017cyciem wyszukiwania binarnego z z\u0142o\u017cono\u015bci\u0105 czasow\u0105 O(logn).\n\nPrzyk\u0142adowa odpowied\u017a:\n```\ndef findMedian(nums1, nums2):\n    total = len(nums1) + len(nums2)\n    if total % 2 == 1:\n        return findKth(nums1, nums2, total // 2 + 1)\n    else:\n        return (findKth(nums1, nums2, total // 2) + findKth(nums1, nums2, total // 2 + 1)) / 2.0\ndef findKth(nums1, nums2, k):\n    if len(nums1) > len(nums2):\n        nums1, nums2 = nums2, nums1\n    if not nums1:\n        return nums2[k-1]\n    if k == 1:\n        return min(nums1[0], nums2[0])\n    i = min(k // 2, len(nums1))\n    j = k - i\n    if nums1[i-1] <= nums2[j-1]:\n        return findKth(nums1[i:], nums2, j) \n    else:\n        return findKth(nums1, nums2[j:], i)\n```"]}]}
{"question_id": 127, "choices": [{"index": 0, "turns": ["Sprawd\u017a, czy wdra\u017caj\u0105 poprawnie klasyczny algorytm.\n\nPrzyk\u0142adowa odpowied\u017a:\n```\ndef majority_element(arr):\n    count = 0\n    candidate = None\n    # Algorytm g\u0142osowania Boyera-Moore'a\n   for num in arr:\n        if count == 0:\n            candidate = num\n        count += (1 if num == candidate else -1)\n    # Sprawd\u017a, czy kandydat jest rzeczywi\u015bcie elementem wi\u0119kszo\u015bciowym\n    if arr.count(candidate) > len(arr) // 2:\n        return candidate\n    else:\n        return None\n```", "Nie ma prostych modyfikacji opartych na algorytmie g\u0142osowania Boyer-Moore. Oczekiwana odpowied\u017a to u\u017cycie tabeli mieszaj\u0105cej.\n\n```\ndef topTwo(nums):\n    # Zbuduj map\u0119 cz\u0119stotliwo\u015bci\n    frequency_map = {}\n    for num in nums:\n        if num in frequency_map:\n            frequency_map[num] += 1\n        else:\n            frequency_map[num] = 1\n\n    # Znajd\u017a dwa najcz\u0119\u015bciej wyst\u0119puj\u0105ce elementy\n    most_frequent = sorted(frequency_map.items(), key=lambda x: x[1], reverse=True)[:2]\n\n    return [num for num, _ in most_frequent]\n```"]}]}
{"question_id": 128, "choices": [{"index": 0, "turns": ["Oczekiwan\u0105 odpowiedzi\u0105 jest programowanie dynamiczne, jak pokazano poni\u017cej. Niekt\u00f3re chatboty mog\u0105 udzieli\u0107 odpowiedzi u\u017cywaj\u0105c liczby Catalana.\nSprawd\u017a przypadek brzegowy, jak wtedy, gdy n jest parzyste -> zwr\u00f3\u0107 0.\n\n```python\ndef full_binary_trees(n):\n    if n % 2 == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    dp = [0] * (n + 1)\n    dp[1] = 1\n\n    for i in range(3, n + 1, 2):\n        for j in range(1, i - 1, 2):\n            dp[i] += dp[j] * dp[i - j - 1]\n\n    return dp[n]\n```", "Programowanie dynamiczne jest nadal oczekiwan\u0105 odpowiedzi\u0105. Liczba Catalana jest niepoprawna. Sprawd\u017a dok\u0142adnie r\u00f3wnanie przej\u015bciowe.\n\n```python\ndef full_ternary_trees(n):\n    if n % 3 != 1:\n        return 0\n    if n == 1:\n        return 1\n\n    dp = [0] * (n + 1)\n    dp[1] = 1\n\n    for i in range(4, n + 1, 3):\n        for j in range(1, i - 1, 3):\n            for k in range(1, i - j - 1, 3):\n                dp[i] += dp[j] * dp[k] * dp[i - j - k - 1]\n\n    return dp[n]\n```"]}]}
{"question_id": 129, "choices": [{"index": 0, "turns": ["Proste, ale ostro\u017cnie z przypadkami brzegowymi.\n\nPrzyk\u0142adowa odpowied\u017a:\n```\ndef kth_smallest_element(list1, list2, k):\n    m, n = len(list1), len(list2)\n    i, j = 0, 0\n    while i < m i j < n:\n        if list1[i] < list2[j]:\n            k -= 1\n            if k == 0:\n                return list1[i]\n            i += 1\n        else:\n            k -= 1\n            if k == 0:\n                return list2[j]\n            j += 1\n    while i < m:\n        k -= 1\n        if k == 0:\n            return list1[i]\n        i += 1\n    while j < n:\n        k -= 1\n        if k == 0:\n            return list2[j]\n        j += 1\n    return None\n```", "Tak, zmodyfikowane wyszukiwanie binarne ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 O(log k).\n\nPrzyk\u0142adowa odpowied\u017a:\n```\ndef find_kth_element_helper(list1, list2, k):\n    if len(list1) > len(list2):\n        return find_kth_element_helper(list2, list1, k)\n    if not list1:\n        return list2[k - 1]\n    if k == 1:\n        return min(list1[0], list2[0])\n    i = min(len(list1), k // 2)\n    j = k - i\n    if list1[i - 1] < list2[j - 1]:\n        return find_kth_element_helper(list1[i:], list2, k - i)\n    else:\n        return find_kth_element_helper(list1, list2[j:], k - j)\ndef kth_smallest_element(list1, list2, k):\n    return find_kth_element_helper(list1, list2, k)\n```"]}]}
{"question_id": 130, "choices": [{"index": 0, "turns": ["O(n^2) lub O(nlogn) jest oczekiwane. Poni\u017cej znajduje si\u0119 rozwi\u0105zanie O(n^2). Mo\u017cesz r\u00f3wnie\u017c najpierw je posortowa\u0107 i u\u017cy\u0107 dw\u00f3ch wska\u017anik\u00f3w.\n\n```\ndef find_common_elements(arr1, arr2):\n    common_elements = []\n    for i in range(len(arr1)):\n        for j in range(len(arr2)):\n            if arr1[i] == arr2[j]:\n                # Sprawd\u017a, czy element jest ju\u017c na li\u015bcie common_elements\n                if arr1[i] not in common_elements:\n                    common_elements.append(arr1[i])\n    return common_elements\n```", "Po prostu u\u017cyj tablicy mieszaj\u0105cej (set lub dict), aby osi\u0105gn\u0105\u0107 z\u0142o\u017cono\u015b\u0107 czasow\u0105 O(n).\n\n```\ndef find_common_elements(arr1, arr2):\n    set1 = set(arr1)\n    set2 = set(arr2)\n    common_elements = set1.intersection(set2)\n    return list(common_elements)\n```"]}]}
{"question_id": 131, "choices": [{"index": 0, "turns": ["Odpowied\u017a na pierwsze pytanie powinna brzmie\u0107 [5, 1, 3]."]}]}
{"question_id": 133, "choices": [{"index": 0, "turns": ["Odpowied\u017a powinna zawiera\u0107 tylko \"Harry Potter i Kamie\u0144 Filozoficzny\" oraz \"Kroniki Galaktyki Pryzmat: Przebudzenie Starcastera\""]}]}
{"question_id": 134, "choices": [{"index": 0, "turns": ["Firma V (25 miliard\u00f3w dolar\u00f3w).", "Firma Z (35%)"]}]}
{"question_id": 136, "choices": [{"index": 0, "turns": ["jak, 3; jest, 2; skarby, 1", "i, 5; si\u0119, 3; mozaika, 1"]}]}
{"question_id": 140, "choices": [{"index": 0, "turns": ["Miesi\u0105c,Max,Min\n01,156.25,153.80\n02,163.90,161.80\n03,168.20,166.80", "```\n{ \"Stycze\u0144\": { \"Max\": 156, \"Min\": 154 }, \"Luty\": { \"Max\": 164, \"Min\": 162 }, \"Marzec\": { \"Max\": 168, \"Min\": 167 } }\n```"]}]}
{"question_id": 142, "choices": [{"index": 0, "turns": ["Promie\u0144 orbity wzro\u015bnie, a okres obiegu si\u0119 wyd\u0142u\u017cy."]}]}
{"question_id": 143, "choices": [{"index": 0, "turns": ["Dwa g\u0142\u00f3wne etapy: reakcje zale\u017cne i niezale\u017cne od \u015bwiat\u0142a"]}]}
{"question_id": 144, "choices": [{"index": 0, "turns": ["Informacja genetyczna przep\u0142ywa z DNA przez RNA do bia\u0142ka. Trzy procesy: replikacja, transkrypcja i translacja. Francis Crick w 1958 roku."]}]}
{"question_id": 145, "choices": [{"index": 0, "turns": ["CaCO\u2083 + 2 HCl \u2192 CaCl\u2082 + CO\u2082 + H\u2082O", "Nie jest \u0142atwo to zrobi\u0107."]}]}
